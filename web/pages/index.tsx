import { useListTodos, useGetTodo, useAddTodo } from '@hooks/generated-hooks'
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useCallback } from 'react'
import styles from '../styles/Home.module.css'

const Home: NextPage = () => {
  const {
    data: todos,
    refetch: refetchAllTodos,
    status,
  } = useListTodos(undefined, {
    keepPreviousData: true,
    refetchOnReconnect: 'always',
    refetchOnWindowFocus: true,
    suspense: undefined,
  })
  const { data: todo, status: todoStatus } = useGetTodo({ id: '1' })
  const { mutateAsync: addTodo } = useAddTodo({
    onError: () => {},
    onSettled: () => {
      refetchAllTodos()
    },
    onSuccess: () => {},
  })

  const onAddTodo = useCallback(async () => {
    await addTodo({
      inputs: {
        description: null,
        endDate: '2022-08-23T22:00:00.000Z',
        name: 'Manually Created Todo',
        startDate: '2022-08-23T20:00:00.000Z',
      },
    })
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [])
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <hr />

        <button onClick={onAddTodo}>Add Todo</button>

        <hr />

        <h1>Individual Todo</h1>
        {todoStatus === 'error' && <h1>Error</h1>}
        {todoStatus === 'loading' && <h1>Loading...</h1>}
        {todoStatus === 'success' && todos && (
          <pre>{JSON.stringify(todo, undefined, 2)}</pre>
        )}

        <hr />

        <h1>All Todos</h1>

        {status === 'error' && <h1>Error</h1>}
        {status === 'loading' && <h1>Loading...</h1>}
        {status === 'success' && todos && (
          <pre>{JSON.stringify(todos, undefined, 2)}</pre>
        )}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
